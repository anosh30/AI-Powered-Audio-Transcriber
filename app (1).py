# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jm2FehL_ao7gVsZXyXm7ZxJCQCrMojsf
"""

import streamlit as st
import whisper
import tempfile
import os
from pydub import AudioSegment

# --------------- PAGE CONFIGURATION ---------------
st.set_page_config(page_title="Audio Transcriber", layout="wide")

# --------------- STYLING (WHITE TEXT) ---------------
st.markdown(
    """
    <style>
        body { background-color: black; color: white; }
        .stApp { background-color: black; }
        .css-18e3th9 { background-color: black !important; }
        .css-1d391kg, .css-1q8dd3e, .css-qrbaxs, .css-10trblm, .css-5rimss { color: white; }
    </style>
    """,
    unsafe_allow_html=True
)

# --------------- APP HEADER ---------------
st.markdown("<h1 style='text-align: center; color: white;'>üéôÔ∏è Audio Transcriber</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align: center; color: white;'>Upload an audio file to transcribe it into <b>Roman Urdu</b>.</p>", unsafe_allow_html=True)

# --------------- AUDIO UPLOAD ---------------
st.subheader("üìÇ Upload an Audio File")
uploaded_file = st.file_uploader("Drag and drop a file here", type=["mp3", "wav", "m4a"], accept_multiple_files=False)

# --------------- PROCESS FILE IF UPLOADED ---------------
if uploaded_file:
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as temp_audio:
        temp_audio.write(uploaded_file.read())
        audio_path = temp_audio.name

    # Convert to WAV (if needed)
    if not audio_path.endswith(".wav"):
        sound = AudioSegment.from_file(audio_path)
        audio_path = audio_path.replace(".mp3", ".wav")
        sound.export(audio_path, format="wav")

    # Load Whisper Model
    model = whisper.load_model("base")

    with st.spinner("üîÑ Transcribing... Please wait ‚è≥"):
        result = model.transcribe(audio_path, language="ur")  # Urdu transcription
        transcribed_text = result["text"]

    # Display Transcription
    st.subheader("üìù Roman Urdu Transcription")
    st.write(f"<p style='color: white;'>{transcribed_text}</p>", unsafe_allow_html=True)

    # Download Button
    st.download_button(
        label="üì• Download Transcription",
        data=transcribed_text,
        file_name="roman_urdu_transcription.txt",
        mime="text/plain"
    )

    # Cleanup Temporary Files
    os.remove(audio_path)